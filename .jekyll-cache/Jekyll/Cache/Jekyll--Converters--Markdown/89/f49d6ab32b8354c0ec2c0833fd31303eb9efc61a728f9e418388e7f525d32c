I"þ
<h1 id="introduction-to-javascript-js">Introduction to JavaScript (JS)</h1>

<h2 id="goal">Goal</h2>
<p>By the end of this lesson, you should have an understanding of how to use JavaScript alongside HTML and CSS to create webpages.</p>

<h2 id="overview">Overview</h2>
<p>Earlier, we used an analogy of a house to describe the purposes of HTML and CSS. HTML is structure (walls, roof, foundation) and CSS is design (layout, decoration). But, if we are building a house, how do we get the functionality (electricity, plumbing, etc.)? The answer is JavaScript (JS). JS allows us to store data in databases, get data from other sites, change whatâ€™s in the HTML and CSS, and much more. While just HTML and CSS may be fine for a website that simply exists to show information such as contact information or hours of business, anything more interesting than this will require JS.</p>

<h2 id="topics">Topics</h2>

<h3 id="variables">Variables</h3>
<p>One of the fundamental concepts in JS (and many other coding languages) is <strong>variables</strong>. Think of a <strong>variable</strong> as a box that we can put a value in and get or change later.</p>

<p>A variable requires 2 things, a name and a value. Look at the code below:</p>

<p><code class="language-plaintext highlighter-rouge">var box = 5</code></p>

<p>In the example above, we see 4 things; <code class="language-plaintext highlighter-rouge">var</code>, <code class="language-plaintext highlighter-rouge">box</code>, <code class="language-plaintext highlighter-rouge">=</code>, and <code class="language-plaintext highlighter-rouge">5</code>. Letâ€™s break each of these down.</p>

<ol>
  <li>
    <p>The line starts with <code class="language-plaintext highlighter-rouge">var</code> because we are <strong>declaring</strong> a variable. <strong>Declaring</strong> a variable simply means we are creating a new variable for future use. You must <strong>declare</strong> a variable before you use it. For example, <code class="language-plaintext highlighter-rouge">box = 5</code>, (while allowed) is an improper way of declaring a variable.</p>
  </li>
  <li>
    <p>The next part of code is <code class="language-plaintext highlighter-rouge">box</code> which is what we are <strong>naming</strong> the variable. By <strong>naming</strong> the variable, we can reference it later by simply typing <code class="language-plaintext highlighter-rouge">box</code> in the code.</p>
  </li>
  <li>
    <p>The equal symbol, <code class="language-plaintext highlighter-rouge">=</code>, is saying <em>the variable that is to the left of me (which is <code class="language-plaintext highlighter-rouge">box</code> in this case) is now equal to whatever is right of me (which is <code class="language-plaintext highlighter-rouge">5</code>)</em>.</p>
  </li>
</ol>
:ET