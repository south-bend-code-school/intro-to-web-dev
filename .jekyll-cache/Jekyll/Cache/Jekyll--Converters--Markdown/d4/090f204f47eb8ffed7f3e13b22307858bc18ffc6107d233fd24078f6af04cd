I"ç<h1 id="intro-to-html">Intro to HTML</h1>

<h2 id="overview">Overview</h2>

<p>At the end of this lesson, you will be know what HTML is, how it fits into
websites, and how to use it.</p>

<h2 id="topics">Topics</h2>

<ol>
  <li>What is HTML</li>
  <li>HTML‚Äôs place in a website</li>
  <li>Basic HTML</li>
  <li>Advanced HTML</li>
</ol>

<h3 id="1-what-is-html">1. What is HTML</h3>

<p>HTML stands for HyperText Markup Language (don‚Äôt worry about memorizing this). It is a necessary part of any website (and technically the only part is absolutely necessary). An example of a very simple HTML file could have code that looks like this:</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;html&gt;
  &lt;head&gt;&lt;/head&gt;
  &lt;body&gt;
    This is a simple website.
  &lt;/body&gt;
&lt;/html&gt;
</code></pre></div></div>

<p>Which would result in a webpage that looks like:</p>

<p><img src="/assets/img/module1/example_site_1.png" alt="Image" /></p>

<p>Wow. What a beautiful website.</p>

<p>When looking at that, it may not seem simple or make any sense at all. And it shouldn‚Äôt!
We‚Äôre going to break down everything we are seeing bit by bit.</p>

<h3 id="2-htmls-place-in-a-website">2. HTML‚Äôs place in a website</h3>

<p>Imagine instead of a website, we were building a house from scratch (don‚Äôt worry, I also have not personally built a house). Would our first move be to paint the walls? Would we first install plumbing and electricals? No, that would be ridiculous! How could we paint if there weren‚Äôt even any walls? How could we install plumbing when there is no structure?</p>

<p>If a website was a house, HTML would be the structure. Everything else is built on top of it. Just like a house that is just a structure without decoration or internal workings, it‚Äôs ugly and likely not that useful. However, it is necessary and the place where every website should start.</p>

<h3 id="3-basic-html">3. Basic HTML</h3>

<p>Let‚Äôs take another look at the code from earlier:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;html&gt;
  &lt;head&gt;&lt;/head&gt;
  &lt;body&gt;
    This is a simple website.
  &lt;/body&gt;
&lt;/html&gt;
</code></pre></div></div>

<p>It may seem strange that there are symbols and weird words all over the place when the only thing we see on the screen is the sentence ‚ÄúThis is a simple website.‚Äù However, all of it has meaning.</p>

<h4 id="a-formatting-opening-and-closing">a) Formatting, Opening, and Closing</h4>
<p>Let‚Äôs start from the sentence that we do recognize: <code class="language-plaintext highlighter-rouge">This is a simple website.</code> Right above and below that sentence, we see <code class="language-plaintext highlighter-rouge">&lt;body&gt;</code> and <code class="language-plaintext highlighter-rouge">&lt;/body&gt;</code>. Both <code class="language-plaintext highlighter-rouge">&lt;body&gt;</code> and <code class="language-plaintext highlighter-rouge">&lt;/body&gt;</code> are types of <strong>tags</strong>. <strong>Tags</strong> will not show up on the screen but instead help the browser know how to display the content between the <strong>tags</strong>. For example, the <strong>tag</strong> <code class="language-plaintext highlighter-rouge">&lt;body&gt;</code> tells the browser that this is where the content we want to show on the screen starts. That is why we see <code class="language-plaintext highlighter-rouge">This is a simple website.</code> since it is after the <code class="language-plaintext highlighter-rouge">&lt;body&gt;</code> <strong>tag</strong>. The <strong>tag</strong> <code class="language-plaintext highlighter-rouge">&lt;/body&gt;</code> tells the browser that this is where the content we want to show on the screen stops.</p>

<p>Notice that the tags are very similar, <code class="language-plaintext highlighter-rouge">&lt;body&gt;</code> and <code class="language-plaintext highlighter-rouge">&lt;/body&gt;</code>. The only difference is that there is a <code class="language-plaintext highlighter-rouge">/</code> before the word in the second tag. Tags without a <code class="language-plaintext highlighter-rouge">/</code> are called <strong>opening tags</strong> while tags with <code class="language-plaintext highlighter-rouge">/</code> are called <strong>closing tags</strong>. Opening and closing tags come in pairs. Opening tags indicate the beginning and closing tags indicate the end (which is why <code class="language-plaintext highlighter-rouge">&lt;body&gt;</code> was at the beginning of the content and <code class="language-plaintext highlighter-rouge">&lt;/body&gt;</code> was at the end). Tags will always start with <code class="language-plaintext highlighter-rouge">&lt;</code> and end with <code class="language-plaintext highlighter-rouge">&gt;</code> with a word or letter on the inside. In the code example above, we can see three example of these pairs <code class="language-plaintext highlighter-rouge">html</code>, <code class="language-plaintext highlighter-rouge">head</code>, and <code class="language-plaintext highlighter-rouge">body</code>. Notice, they all have opening and closing tags. The <code class="language-plaintext highlighter-rouge">html</code> tags are at the top and bottom of the file. They will always encapsulate the rest of the HTML. The <code class="language-plaintext highlighter-rouge">head</code> tags in this example don‚Äôt contain anything. This is fine that they are empty but still should be included in every HTML file. On a more complex website, the <code class="language-plaintext highlighter-rouge">head</code> tags would include information about the website that isn‚Äôt included directly on the screen. Lastly, the <code class="language-plaintext highlighter-rouge">body</code> tags include the content that actually appears on the screen.</p>

<h4 id="b-nesting">b) Nesting</h4>
<p>You may also notice that opening and closing tags can have very different content between them. The <code class="language-plaintext highlighter-rouge">head</code> tags have nothing, the <code class="language-plaintext highlighter-rouge">body</code> tags have a sentence, and the <code class="language-plaintext highlighter-rouge">html</code> tags have other tags between it. These are all fine and valid. If a set of tags is surrounded by another set of tags, the surrounded tags are considered <strong>nested</strong>. So, both the <code class="language-plaintext highlighter-rouge">head</code> and the <code class="language-plaintext highlighter-rouge">body</code> tags are <strong>nested</strong> inside of the <code class="language-plaintext highlighter-rouge">html</code> tags.</p>

<p>Whew. For ‚Äòa simple site‚Äô, sure seems like a lot to talk through! However, if you can understand the format of tags, the concept of opening and closing, and nesting, you are well on your way to understanding HTML as a whole.</p>

<h3 id="4-advanced-html">4. Advanced HTML</h3>

<p>Let‚Äôs look at another example:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;html&gt;
  &lt;head&gt;&lt;/head&gt;
  &lt;body&gt;
    &lt;div&gt;
      This is slightly more complex.
    &lt;/div&gt;
    &lt;div&gt;
      Just look at me go.
    &lt;/div&gt;
  &lt;/body&gt;
&lt;/html&gt;
</code></pre></div></div>

<p>Which looks like:</p>

<p><img src="/assets/img/module1/example_site_2.png" alt="Image" /></p>

<p>Wow, another beautiful webpage.</p>

<p>In the code, we see a lot of the same stuff. We have <code class="language-plaintext highlighter-rouge">html</code> tags surrounding the rest of the HTML, <code class="language-plaintext highlighter-rouge">head</code> tags at the top that are empty, and everything we can see on the screen is inside the <code class="language-plaintext highlighter-rouge">body</code> tags. In fact, the only thing new is the <code class="language-plaintext highlighter-rouge">div</code> tags.</p>
:ET