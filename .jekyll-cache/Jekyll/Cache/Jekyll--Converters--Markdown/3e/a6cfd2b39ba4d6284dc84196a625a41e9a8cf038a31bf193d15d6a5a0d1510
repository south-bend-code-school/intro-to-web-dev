I"ò$<h1 id="project-part-1-virtual-pet">Project Part 1: Virtual Pet</h1>

<h2 id="goal">Goal</h2>

<p>The goal for this project is to begin building a Virtual Pet. At the end of both parts of this project, you will have a Virtual Pet that is needs food, water, and exercise and responds to how well balanced these needs are being handled. At the end, you will have built a webpage that looks something like this:</p>

<p><img src="link-to-image.jpg" alt="" /></p>

<h2 id="overview">Overview</h2>

<p>There are 2 parts to this project. The first part, which you will be doing now, is to build the structure and layout of the page, decorate with the colors and themes of your choosing, and assemble the assets (which just means images or photos) which will be used for this project.</p>

<h2 id="steps">Steps</h2>

<h3 id="files">Files</h3>

<p>In order to start your page, you will need a new folder and a new file. Go to your desktop and create a new folder called <code class="language-plaintext highlighter-rouge">virtual-pet</code>. Then, open up VS Code and create a new file called index.html and save it inside of your <code class="language-plaintext highlighter-rouge">virtual-pet</code> folder.</p>

<p>As always, you need to start will the bare bones of a website which is this:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
  &lt;head&gt;&lt;/head&gt;
  &lt;body&gt;
    Hello world!
  &lt;/body&gt;
&lt;/html&gt;
</code></pre></div></div>

<p>After copying and pasting that into the file, go to the folder <code class="language-plaintext highlighter-rouge">virtual-pet</code> on you desktop, open it, right-click on <code class="language-plaintext highlighter-rouge">index.html</code>, and choose to open in your browser. Confirm that you can see <code class="language-plaintext highlighter-rouge">Hello world!</code>. If so, you are ready to get started.</p>

<h3 id="structure">Structure</h3>

<p>Before starting a webpage, we should always be thinking about what we will need to include in that page. This allows us to formulate how we would like to set up our page and, therefore, our HTML.</p>

<p>Our Virtual Pet page will need 3 things:</p>
<ol>
  <li>A header where we can name our virtual pet and maybe have a description.</li>
  <li>A stats and interaction area where we will be able to see how healthy and balanced our Virtual Pet is.</li>
  <li>An area where we will display different pictures based on how healthy (or not ) our Virtual Pet is.</li>
</ol>

<p>A good practice is to draw a general and simple design (aka mockup) of what we are trying to make. Here is mine:</p>

<p><img src="/assets/img/module1/virtual_pet_mockup.png" alt="Virtual Pet Mockup" /></p>

<p>We can see from the mockup that the whole page is divided into 2 rows, <strong>Header Area</strong> and <strong>Main Area</strong>. Furthermore, <strong>Main Area</strong> is divided into 2 columns, <strong>Image Area</strong> and <strong>Stats and Buttons Area</strong>. Now that we have the general structure in mind, we can write HTML that matches it:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
  &lt;head&gt;&lt;/head&gt;
  &lt;body&gt;
    &lt;div class="header"&gt;&lt;/div&gt;
    &lt;div class="main"&gt;
      &lt;div class="image-area"&gt;&lt;/div&gt;
      &lt;div class="interactive-area"&gt;&lt;/div&gt;
    &lt;/div&gt;
  &lt;/body&gt;
&lt;/html&gt;
</code></pre></div></div>

<p>You can see above that I added 4 <code class="language-plaintext highlighter-rouge">div</code>s to represent the 4 areas I mentioned above.</p>

<p>In order differentiate between the areas, I added <strong>classes</strong> to the <code class="language-plaintext highlighter-rouge">div</code>s with the short names <code class="language-plaintext highlighter-rouge">header</code>, <code class="language-plaintext highlighter-rouge">main</code>, <code class="language-plaintext highlighter-rouge">image-area</code>, and <code class="language-plaintext highlighter-rouge">interactive-area</code> (the area for button and stats). Naming the <code class="language-plaintext highlighter-rouge">div</code>s like this allows us to do 2 things:</p>
<ol>
  <li>The names remind us what the <code class="language-plaintext highlighter-rouge">div</code>â€™s purpose is.</li>
  <li>We can use the <code class="language-plaintext highlighter-rouge">div</code>sâ€™ classes as selectors in our CSS.</li>
</ol>

<p>You may also notice that the <code class="language-plaintext highlighter-rouge">header</code> <code class="language-plaintext highlighter-rouge">div</code> is empty while the <code class="language-plaintext highlighter-rouge">main</code> <code class="language-plaintext highlighter-rouge">div</code> has 2 other <code class="language-plaintext highlighter-rouge">div</code>s inside of it. The reason for this is because, looking at the mockup above, we are planning on splitting <code class="language-plaintext highlighter-rouge">main</code> into 2 columns while leaving <code class="language-plaintext highlighter-rouge">header</code> as just one column.</p>

<h3 id="the-animal">The Animal</h3>

<p>Next, we have to make a decision about what we want our Virtual Pet to be. It can be real, imaginary, a Pokemon, whatever you want. The only requirement is that you find images or gifs online of this creature for each of the following moods:</p>
<ol>
  <li>Neutral: not too happy but not too sad. Just a neutral image or gif for when the pet is just fine.</li>
  <li>Tired: this image will show when the animal is struggling and about to pass out.</li>
  <li>Passed out: an image for when one of the petâ€™s stats has reached zero.</li>
  <li>Upbeat: the pet is doing well! A fun little trot or walk to how happiness and healthiness.</li>
  <li>Exuberant: for when the animal is just crushing life. Should be the happiest, most excited version of your pet.</li>
</ol>

<p>Once you find all of your photos online, download them and put them into your <code class="language-plaintext highlighter-rouge">virtual-pet</code> folder. You should rename them to match their state. <strong>Note: when renaming them, keep the file extension they were downloaded with. So, if you downloaded a gif, the last part of the name should be <code class="language-plaintext highlighter-rouge">.gif</code>. Donâ€™t change that part, just the part in front of it.</strong></p>

<p>I will choose the Loch Ness Monster as my pet. Here is an example of my <code class="language-plaintext highlighter-rouge">neutral.gif</code>:</p>

<p><img src="/assets/img/module1/neutral.gif" alt="" style="max-width:300px" /></p>

<p>I have also gone ahead and downloaded images or gifs for the other 4 states (<code class="language-plaintext highlighter-rouge">tired</code>, <code class="language-plaintext highlighter-rouge">passed-out</code>, <code class="language-plaintext highlighter-rouge">upbeat</code>, and <code class="language-plaintext highlighter-rouge">exuberant</code>) into my <code class="language-plaintext highlighter-rouge">virtual-pet</code> folder.</p>

<h3 id="the-header">The header</h3>

<p>Now that we have decided on a creature and have our structure, we can start putting real content onto the page. Letâ€™s start with the <code class="language-plaintext highlighter-rouge">header</code>.</p>

<p>In our <code class="language-plaintext highlighter-rouge">header</code>, we want 2 things: a <code class="language-plaintext highlighter-rouge">pet-name</code> and a <code class="language-plaintext highlighter-rouge">description</code>. Letâ€™s go ahead and add appropriately classed <code class="language-plaintext highlighter-rouge">div</code>s into our HTML.</p>

<div class="hint">Hover for hint</div>

<div class="language-plaintext hint-content highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
  &lt;head&gt;&lt;/head&gt;
  &lt;body&gt;
    &lt;div class="header"&gt;
      &lt;div class="pet-name"&gt;&lt;/div&gt;
      &lt;div class="description"&gt;&lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="main"&gt;
      &lt;div class="image-area"&gt;&lt;/div&gt;
      &lt;div class="interactive-area"&gt;&lt;/div&gt;
    &lt;/div&gt;
  &lt;/body&gt;
&lt;/html&gt;
</code></pre></div></div>

<p>Now that we have the <code class="language-plaintext highlighter-rouge">div</code>s in place. Letâ€™s come up with a name and a description for our pet. Iâ€™ll name mine <code class="language-plaintext highlighter-rouge">Big L</code> and use the description <code class="language-plaintext highlighter-rouge">He is big and not good at things.</code> Whatever you decide for a name and description, put that content in between the appropriate tags.</p>

<div class="hint">Hover for hint</div>

<div class="language-plaintext hint-content highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
  &lt;head&gt;&lt;/head&gt;
  &lt;body&gt;
    &lt;div class="header"&gt;
      &lt;div class="pet-name"&gt;&lt;/div&gt;
      &lt;div class="description"&gt;&lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="main"&gt;
      &lt;div class="image-area"&gt;&lt;/div&gt;
      &lt;div class="interactive-area"&gt;&lt;/div&gt;
    &lt;/div&gt;
  &lt;/body&gt;
&lt;/html&gt;
</code></pre></div></div>
:ET