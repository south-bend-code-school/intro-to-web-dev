I"·<h1 id="practice-problem-blackjack">Practice Problem: Blackjack</h1>

<h2 id="goal">Goal</h2>
<p>At the end of this practice problem, you should have created the card playing elements of the game of blackjack.</p>

<h2 id="overview">Overview</h2>
<p>The game of blackjack is a gambling card game where players compete against a dealer to try to get closest to 21 without going over. While blackjack includes gambling and the exchange of chips, we wonâ€™t focus on that today. We simply want to do the following:</p>

<ul>
  <li>Create a deck of 52 cards</li>
  <li>Mimic shuffling</li>
  <li>Deal 2 cards to both dealer and player</li>
  <li>Show cards on screen</li>
  <li>Declare winner and restart</li>
</ul>

<h2 id="steps">Steps</h2>

<h3 id="setup">Setup</h3>

<p>In order to start your page, you will need a new folder and a new file. Go to your desktop and create a new folder called <code class="language-plaintext highlighter-rouge">blackjack</code>. Then, open up VS Code and create a new file called <code class="language-plaintext highlighter-rouge">index.html</code> and save it inside of your <code class="language-plaintext highlighter-rouge">blackjack</code> folder.</p>

<p>As always, you need to start will the bare bones of a website which is this:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
  &lt;head&gt;
    &lt;style&gt;

    &lt;/style&gt;
  &lt;/head&gt;
  &lt;body&gt;
    Hello world!
  &lt;/body&gt;
  &lt;script&gt;

  &lt;/script&gt;
&lt;/html&gt;
</code></pre></div></div>

<p>After copying and pasting that into the file, go to the folder <code class="language-plaintext highlighter-rouge">blackjack</code> on you desktop, open it, right-click on <code class="language-plaintext highlighter-rouge">index.html</code>, and choose to open in your browser. Confirm that you can see <code class="language-plaintext highlighter-rouge">Hello world!</code>. If so, you are ready to get started.</p>

<h3 id="creating-a-deck">Creating a deck</h3>

<p>Letâ€™s start by creating a deck of cards in JavaScript. A deck has 52 cards which are made up of 4 suits with 13 values within each suit. There are several ways we could represent this deck of cards in JS. For our purposes, I believe the easiest way for us to represent the deck is to use both an <strong>arrays</strong> and <strong>objects</strong>.</p>

<p>Each individual card will be an <strong>object</strong> with 2 <strong>key</strong>/<strong>value</strong> pairs, the <strong>suit</strong> (<code class="language-plaintext highlighter-rouge">"hearts", "diamonds"</code>, etc.) and the <strong>value</strong> (<code class="language-plaintext highlighter-rouge">1</code>, <code class="language-plaintext highlighter-rouge">2</code>,). We are going to create a <strong>object</strong> for each card and then put all 52 cards into an <strong>array</strong>. This will allow us to do things like shuffle and deal cards without much work.</p>

<p>So, when it comes to making the individual card objects, we can do 1 of 2 things:</p>
<ol>
  <li>We manually type out each card. (Nope)</li>
  <li>We use 2 <strong>for</strong> loops to create the 52 cards quickly and easily. (Yep)</li>
</ol>

<p>Alright, so letâ€™s create a <strong>function</strong> that will build us a new deck. Letâ€™s call it <code class="language-plaintext highlighter-rouge">buildDeck</code>. <code class="language-plaintext highlighter-rouge">buildDeck</code> will need to return an <strong>array</strong> of 52 card objects. Letâ€™s include some of the parts of the <strong>function</strong> we know will be in there. Create a <strong>variable</strong> deck in <code class="language-plaintext highlighter-rouge">buildDeck</code> called <code class="language-plaintext highlighter-rouge">newDeck</code> that is an empty <strong>array</strong> and letâ€™s have our <strong>function</strong> return <code class="language-plaintext highlighter-rouge">newDeck</code>.</p>

<div class="hint">Hover for hint</div>

<div class="language-plaintext hint-content highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
  ...
  &lt;script&gt;

    var buildDeck = () =&gt; {
      var newDeck = []

      return newDeck
    }

  &lt;/script&gt;
&lt;/html&gt;
</code></pre></div></div>

<p>Alright, so we have a function that returns an empty <strong>array</strong>. Letâ€™s add some more code so that the <code class="language-plaintext highlighter-rouge">newDeck</code> isnâ€™t empty at the end of <code class="language-plaintext highlighter-rouge">buildDeck</code>.</p>

<p>In order to create 52 cards, we need to create a card for every suit and for every value (1-13). So, letâ€™s first make arrays representing the suits and values and put them inside of <code class="language-plaintext highlighter-rouge">buildDeck</code>.</p>

<div class="hint">Hover for hint</div>

<div class="language-plaintext hint-content highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
  ...
  &lt;script&gt;

    var buildDeck = () =&gt; {
      var newDeck = []
      var suits = ['heart', 'spade', 'diamond', 'club']
      var values = [1,2,3,4,5,6,7,8,9,10,11,12,13]

      return newDeck
    }

  &lt;/script&gt;
&lt;/html&gt;
</code></pre></div></div>

<p>Okay, so we have <strong>arrays</strong> for both our values and suits. Now, how do we use loops to create the cards and add them to <code class="language-plaintext highlighter-rouge">newDeck</code>? Letâ€™s review how we wanted to make a card:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>var card = {
  suit: 'heart',
  value: 4
}
</code></pre></div></div>

<p>The variable <code class="language-plaintext highlighter-rouge">card</code> above represents the 4 of hearts.</p>

<p>Now that we have confirmed what the card <strong>object</strong> will look like, letâ€™s start building loops.</p>

<p>First, letâ€™s build a loop that will loop over all the suits.</p>

<div class="hint">Hover for hint</div>

<div class="language-plaintext hint-content highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
  ...
  &lt;script&gt;

    var buildDeck = () =&gt; {
      var newDeck = []
      var suits = ['heart', 'spade', 'diamond', 'club']
      var values = [1,2,3,4,5,6,7,8,9,10,11,12,13]

      return newDeck
    }

  &lt;/script&gt;
&lt;/html&gt;
</code></pre></div></div>

:ET